import java.util.ArrayList;  
import java.util.List;  
import java.util.Scanner;  

public class MatrixFormatter {  
    public static void main(String[] args) {  
        Scanner scanner = new Scanner(System.in);  

        // Read the number of matrices  
        int N = Integer.parseInt(scanner.nextLine().trim());  

        // Read the number of rows and columns  
        String[] dimensions = scanner.nextLine().trim().split(" ");  
        int r = Integer.parseInt(dimensions[0]);  
        int c = Integer.parseInt(dimensions[1]);  

        // Read in the matrices  
        List<List<int[][]>> matrices = new ArrayList<>();  
        for (int row = 0; row < r; row++) {  
            String[] elements = scanner.nextLine().trim().split(" ");  
            int[][] matrixRow = new int[N][c];  

            for (int i = 0; i < N; i++) {  
                for (int col = 0; col < c; col++) {  
                    matrixRow[i][col] = Integer.parseInt(elements[i * c + col]);  
                }  
            }  
            matrices.add(matrixRow);  
        }  

        // Read and process the instructions  
        List<List<Integer>> instructions = new ArrayList<>();  
        while (scanner.hasNextLine()) {  
            String line = scanner.nextLine().trim();  
            if (!line.isEmpty()) {  
                String[] instructionParts = line.split(" ");  
                List<Integer> instructionList = new ArrayList<>();  
                for (String part : instructionParts) {  
                    instructionList.add(Integer.parseInt(part));  
                }  
                instructions.add(instructionList);  
            }  
        }  

        // Output the matrices as specified in the instructions  
        StringBuilder output = new StringBuilder();  
        for (List<Integer> instruction : instructions) {  
            for (int index : instruction) {  
                // Convert 1-based index to 0-based index  
                int matrixIndex = index - 1;  

                // Construct the output for the matrix at matrixIndex  
                for (int row = 0; row < r; row++) {  
                    // Add the row of the specified matrix to the output  
                    for (int col = 0; col < c; col++) {  
                        output.append(matrices.get(row)[matrixIndex][col]).append(" ");  
                    }  
                }  
            }  
        }  

        // Print the output with formatting  
        System.out.println(output.toString().trim());  
        
        // Close the scanner  
        scanner.close();  
    }  
}
